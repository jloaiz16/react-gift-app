{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGif.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cat","alert","type","id","value","onChange","target","GifGridItem","item","className","title","src","url","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","map","omg","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","gifs","useFetchGif","onClick","filter","x","gif","GiffExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6OAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAiBzC,OACE,uBAAMC,SAfa,SAACC,GACpBA,EAAEC,iBACiB,KAAfJ,GACFF,GAAc,SAACO,GAAD,OAAUL,GAAV,mBAAyBK,OACvCJ,EAAc,KAEdK,MAAM,wCASR,UACE,uBAAOC,KAAK,OAAOC,GAAG,MAAMC,MAAOT,EAAYU,SAN9B,SAACP,GACpBF,EAAcE,EAAEQ,OAAOF,UAMrB,6CCNSG,G,YAbK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACE,sBAAKC,UAAU,kCAAf,UACE,mCAAMD,EAAKE,SACX,qBAAKC,IAAKH,EAAKI,IAAKC,IAAKL,EAAKE,a,uBCOrBI,EAfF,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACRJ,EADQ,0FACiFK,UAC7FF,GAFY,qBAIKG,MAAMN,GAJX,cAIRO,EAJQ,gBAKSA,EAAKC,OALd,uBAKNC,EALM,EAKNA,KALM,kBAMPA,EAAKC,KAAI,SAACC,GACf,MAAO,CACLpB,GAAIoB,EAAIpB,GACRO,MAAOa,EAAIb,MACXE,IAAKW,EAAIC,OAAOC,iBAAiBb,SAVvB,2CAAH,sDCoCEc,EA7BC,SAAC,GAAiC,IAA/BX,EAA8B,EAA9BA,SAAUtB,EAAoB,EAApBA,cAAoB,ECJtB,SAACsB,GAAc,IAAD,EACbrB,mBAAS,CACjC2B,KAAM,GACNM,SAAS,IAH4B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACRhB,EAAQC,GAAUgB,MAAK,SAACC,GACtBH,EAAS,CACPR,KAAMW,EACNL,SAAS,SAGZ,CAACZ,IAEGa,EDVmBK,CAAYlB,GAA9BM,EADuC,EACvCA,KAAMM,EADiC,EACjCA,QACd,OACE,qCACE,sBAAKlB,UAAU,SAAf,UACE,mCAAMM,EAAN,OACA,wBACEmB,QAAS,kBACPzC,GAAc,SAACO,GAAD,OAASA,EAAImC,QAAO,SAACC,GAAD,OAAOA,IAAMrB,SAFnD,uBAQDY,GAAW,oBAAIlB,UAAU,mBAAd,2BACZ,uBACA,qBAAKA,UAAU,iBAAf,SACGY,EAAKC,KAAI,SAACe,GAAD,OACR,cAAC,EAAD,CAAa7B,KAAM6B,GAAUA,EAAIlC,aEN5BmC,EAfO,WAAO,IAAD,EACU5C,mBAAS,CAAC,cADpB,mBACnB6C,EADmB,KACP9C,EADO,KAG1B,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACC8C,EAAWjB,KAAI,SAACtB,GAAD,OACd,cAAC,EAAD,CAAmBe,SAAUf,EAAKP,cAAeA,GAAnCO,U,MCRtBwC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.f2bd6670.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue !== '') {\r\n      setCategories((cat) => [inputValue, ...cat]);\r\n      setInputValue('');\r\n    } else {\r\n      alert('Input empty, please add information');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text' id='add' value={inputValue} onChange={handleChange} />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './GifGridItem.css';\r\n\r\nconst GifGridItem = ({ item }) => {\r\n  return (\r\n    <div className='gif-container animate__bounceIn'>\r\n      <h4> {item.title}</h4>\r\n      <img src={item.url} alt={item.title} />\r\n    </div>\r\n  );\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default GifGridItem;\r\n","const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=gBCJa60hdLsXel7gLIML8rWGlobwpbiy&q=${encodeURI(\r\n    category\r\n  )}&limit=8`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  return data.map((omg) => {\r\n    return {\r\n      id: omg.id,\r\n      title: omg.title,\r\n      url: omg.images.downsized_medium.url,\r\n    };\r\n  });\r\n};\r\n\r\nexport default getGifs;\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './GifGrid.css';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nimport { useFetchGif } from '../hooks/useFetchGif';\r\n\r\nconst GifGrid = ({ category, setCategories }) => {\r\n  const { data, loading } = useFetchGif(category);\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <h3> {category} </h3>\r\n        <button\r\n          onClick={() =>\r\n            setCategories((cat) => cat.filter((x) => x !== category))\r\n          }\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n      {loading && <h4 className='animate__flipInX'> Loading ... </h4>}\r\n      <br />\r\n      <div className='grid-container'>\r\n        {data.map((gif) => (\r\n          <GifGridItem item={gif} key={gif.id} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport const useFetchGif = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((gifs) => {\r\n      setState({\r\n        data: gifs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiffExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h1>GiffExpertApp</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      {categories.map((cat) => (\r\n        <GifGrid key={cat} category={cat} setCategories={setCategories} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GiffExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GiffExpertApp from './GiffExpertApp';\r\nimport './index.css';\r\n\r\nReactDOM.render(<GiffExpertApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}